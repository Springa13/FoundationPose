MODULE SocketServer
    VAR socketdev socket_1;
    VAR string recvstr;
    VAR string sendstr;
    VAR robtarget target;
    VAR pose ee_pose;

    PROC main()
        ! Create and connect socket to the PC
        SocketCreate socket_1;
        SocketConnect socket_1, "192.168.0.1", 1025;  ! PC IP and port (change as needed)

        WHILE TRUE DO
            ! Wait for command from PC
            SocketRead socket_1, recvstr;

            ! Example recvstr: "500 0 400 1 0 0 0"
            ! Convert to robtarget manually
            ! Simple version assumes only translation and quaternion
            VAR num arr{7};
            StrToVal recvstr, arr;

            target.trans.x := arr{1};
            target.trans.y := arr{2};
            target.trans.z := arr{3};
            target.rot.q1 := arr{4};
            target.rot.q2 := arr{5};
            target.rot.q3 := arr{6};
            target.rot.q4 := arr{7};

            ! Use MoveJ or MoveL depending on motion type
            MoveJ target, v100, fine, tool0;

            ! Get end-effector pose relative to base
            ee_pose := CRobT();

            ! Flatten 4x4 pose matrix into space-separated string
            sendstr := PoseToString(ee_pose);

            ! Send pose string to PC
            SocketWrite socket_1, sendstr;
        ENDWHILE
    ENDPROC

    FUNC string PoseToString(pose p)
        VAR string s := "";
        FOR i FROM 1 TO 4 DO
            FOR j FROM 1 TO 4 DO
                s := s + ValToStr(p.transf[i, j]) + " ";
            ENDFOR
        ENDFOR
        RETURN s;
    ENDFUNC

ENDMODULE
